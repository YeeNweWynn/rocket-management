services:
  # Launchsite
  app:
    image: "dreamci11/rocketapp:1.0.0"
    container_name: rocketapp
    ports:
      - "8000:5000"
      - "4000-4009:4000-4009"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
    networks:
      - app_network
  laravel:
    build:
      context: .
      dockerfile: Dockerfile.PHP
    image: laravel
    container_name: laravel
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    environment:
      - APP_ENV=local
    networks:
      - app_network
  node:
    platform: linux/arm64/v8
    build:
      context: .
      dockerfile: Dockerfile.Node
    image: node
    container_name: node
    tty: true
    ports:
      - "5173:5173"
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - app_network
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - laravel
    networks:
      - app_network
  mysql:
    platform: linux/x86_64
    image: mysql:8.0
    container_name: mysql
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "app-database"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_PASSWORD: "root"
      MYSQL_USER: "user"
    volumes:
      - db_data:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app_network
  phpmyadmin:
    platform: linux/x86_64
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 9000:80
    networks:
      - app_network
  redis:
    image: redis:7.2.5
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - redis_data:/var/lib/redis/
    networks:
      - app_network
networks:
  app_network:
    driver: bridge

#Volumes
volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
